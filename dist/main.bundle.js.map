{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vendor/sapient/codebase/src/app/dashboard/views/custom-widget.html","webpack:///./src/vendor/sapient/codebase/src/components/templates/custom.js","webpack:///./src/vendor/sapient/codebase/src/app/dashboard/directives/custom-widget.js","webpack:///./src/vendor/sapient/codebase/src/app/dashboard/core/data-factories/dashboard-data.js","webpack:///./src/vendor/sapient/codebase/src/app/dashboard/core/data-factories/custom-dashboard-data.js","webpack:///./src/vendor/sapient/index.js","webpack:///./src/vendor/index.js","webpack:///./src/services/health/health.js","webpack:///./src/services/index.js","webpack:///./src/components/smart/team-dashboard.html","webpack:///./src/components/smart/team-dashboard.js","webpack:///./src/components/smart/status.html","webpack:///./src/components/smart/status.js","webpack:///./src/components/dumb/form/input-textarea/input-textarea.component.html","webpack:///./src/components/dumb/form/input-textarea/input-textarea.component.js","webpack:///./src/components/dumb/form/input-number/input-number.component.html","webpack:///./src/components/dumb/form/input-number/input-number.component.js","webpack:///./src/components/dumb/form/input-text/input-text.component.html","webpack:///./src/components/dumb/form/input-text/input-text.component.js","webpack:///./src/components/dumb/basic/basic.component.html","webpack:///./src/components/dumb/basic/basic.component.js","webpack:///./src/components/index.js","webpack:///./src/index.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/styles/lloyds.less?4dc0","webpack:///./src/styles/lloyds.less?1939"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","CustomTemplateController","$scope","$rootScope","$http","$q","customDashboardData","dashboardData","widgetHoverText","ctrl","this","fetchHelpers","then","response","resourceHelpers","fetchProjectDetails","projectDetails","chartModalDialog","selectedChart","chartdata","startDate","endDate","isCalendarOpen","isTrendOverDropdownActive","_","assign","noOfCheckins","data","maintainAspectRatio","tooltips","enabled","scales","yAxes","id","type","display","position","ticks","fontSize","xAxes","gridLines","flowEfficiency","cfdData","responsive","stacked","beginAtZero","legend","labels","boxWidth","appDemonstration","fixedStepSize","applyTrendOverDates","selectedDates","selectedFromSprintList","selectedToSprintList","fetchTrendOverAutoVsManualTest","fetchTrendOverFunctionalTestExecutionTime","fetchTrendOverCodeBuildTime","fetchTrendOverTimeToFixedBroken","fetchTrendOverBackEndJUnit","fetchTrendOverFrontEndJUnit","fetchAllSprintList","fetchTrendOverSprintPredictability","fetchTrendOverCommitmentReliability","fetchAllSprintListWithoutStatus","fetchTrendOverStoryLeadTime","fetchTrendOverStoryLiveLeadTime","trendOverChartModal","trendOverAutoVsManualTest","trendOverFunctionalTestExecutionTime","trendOverCodeBuildTime","trendOverTimeToFixedBrokenBuild","trendOverCodeQuality","trendOverBackEndJUnit","trendOverFrontEndJUnit","trendOverSprintPredictability","isApplyTrendOverActive","fromSprint","toSprint","setFromToSplitList","tooltipText","paramSprintList","trendOverCommitmentReliability","trendOverStoryLeadTime","trendOverStoryLiveLeadTime","fromToSplitList","split","sprintList","fromCounter","parseInt","toCounter","errorMessage","allSprintList","forEach","item","sprint","push","trim","customWidgetClick","widgetType","fetchStoryDORtoDOD","fetchWidgetDetails","title","storyDorToDod","storyLeadTime","fetchStoryDODtoLive","storyDodToLive","storyLiveLeadTime","fetchStoryLeadTime","fetchStoryBacklogtoDOR","storyBacklogToDor","fetchDefectInjectionRate","defectInjectionRate","fetchDefectInjectionRatePostlive","defectInjectionRatePostLive","fetchDeploymentFrequency","graphData","length","options","datasetOverride","backgroundColor","borderColor","deploymentFrequency","fetchNoOfCheckins","fetchFlowEfficiency","fetchCfdData","countList","monthList","series","statusList","colors","cfd","fetchEnvCreationTime","envCreationTime","fetchHappinessIndex","hoverBackgroundColor","happinessIndex","fetchAppDemonstration","fetchSprintPredictability","sprintPredictablity","symbol","unit","cutoutPercentage","fetchReleaseDeployTime","releaseDeployTime","relAndDeployTime","fetchAutoVsManualTest","autoPercentage","autoVsManualTest","fetchCodeQuality","console","log","qualityGrade","callbacks","label","codeQuality","undefined","fetchJUnitCoverage","coveragePercentage","jscoveragePercentage","width","fetchPassPercent","jUnitSuccessPercentage","jsJUnitSuccessPercentage","passPercentage","fetchImprovement","improvement","fetchCITime","deferred","defer","all","fixTimeSVU","buildTimeSVU","sumTestExecution","widgetData","citime","resolve","promise","showMaturityRadar","event","button","$","showRadar","text","d3","select","remove","commitmentReliability","fetchRisks","risks","dataCount","fetchTopIssues","topIssues","fetchIssues","issues","fetchAgingIssue","agingIssue","agingIssueLevel","fetchTechDebt","techDebt","fetchSonarTechDebt","sonarTechDebt","fetchAssignValueMetric","assignedValuePercentage","fetchBacklogHealth","backlogHealthPercentage","fetchAssignValueTrend","assignmentValueTrend","route","callback","index","parseFloat","Math","round","toFixed","scaleLabel","labelString","trendOverAutoVsManual","fetchTrendOverCodeQuality","unique","distinct","gradeItem","indexOf","min","stepSize","max","values","autoSkip","maxTicksLimit","sendWidgetDetails","fetchDefects","defectCount","fetchStoryLeadTimeToRelease","timeToRelease","fromSprintList","toSprintList","$watch","logoImage","localStorage","getItem","fetchWidgetHoverText","angular","HygieiaConfig","controller","$inject","customWidgetDirective","templateUrl","restrict","scope","customWidget","fetchData","chartModalData","onWidgetClick","link","element","attrs","overlayDiv","textPopup","widgetInfo","showTooltip","sourceOffset","target","offset","show","html","attr","top","left","hideTooltip","e","interval","setInterval","is","clearInterval","hide","widgetInfoClicked","modalElement","modal","directive","constant","PRODUCT","TEAM","CUSTOM","factory","testSearchRoute","testDetailRoute","testOwnedRoute","testOwnersRoute","testMatchversion","testLogoImagePath","testAggregateProjectSettingsRoute","dashboardRoute","mydashboardRoute","myownerRoute","updateBusItemsRoute","matchversion","logoImagePath","aggregateDashboardRoute","aggregateDashboardProjectViewRoute","aggregateFilterListRoute","kpimastermapRoute","acrossviewkpiRoute","aggregateProjectSettingsRoute","saveOrgHierarchyRoute","kpiDataRoute","saveKpiDataRoute","search","getPromise","local","mydashboard","username","myowner","owners","updateOwners","put","detail","create","post","success","error","delete","rename","newDashboardName","dashboardType","aggrFlag","postData","JSON","stringify","upsertWidget","dashboardId","widget","copy","widgetId","widgetUrl","baseUrl","types","getComponent","componentId","myComponentRoute","updateBusItems","getMatchVersions","getLogoImage","getAggregateDashboard","viewType","getAggregateFilteredlist","queryParam","getKpimastermap","getAcrossviewkpi","firstKpi","graphtype","kpiRequestType","secondKpi","reject","getAggregateProjectSetting","saveOrgHierarchy","getKpiData","saveKpiData","dataObj","HealthService","_classCallCheck","_health","servicesModule","service","_teamDashboard","TeamDashboardController","$controller","setTimeout","layout","classes","happiness","backlogToDOR","storyDORtoDOD","dodToLive","sprintPredictability","backlogHealth","ciTime","techDebit","jUnitCoverage","extend","TeamDashboardComponent","template","TeamDashboardTemplate","_status","StatusController","healthService","_this","collectors","StatusComponent","StatusTemplate","_inputTextareaComponent","Controller","placeholder","InputTextareaComponent","Template","bindings","description","_inputNumberComponent","InputTextComponent","_inputTextComponent","required","_basicComponent","BasicController","BasicComponent","BasicTemplate","content","componentsModule","component","InputNumberComponent","_customWidget","config","$stateProvider","state","url","$provide","decorator","$delegate","customWidgetTemplate","css","location","window","Error","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","test","fn","memo","stylesInDom","isOldIE","document","atob","apply","arguments","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","addAttrs","el","keys","key","setAttribute","obj","update","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","cssMapping","sourceMapping","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","version","names","mappings","file","hmr","locals"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = \"<div class=\\\"widget-content\\\">\\n    <div class=\\\"widget-title\\\">\\n        <h6>{{widgetInfo.title}}</h6>\\n        <i ng-if=\\\"widgetInfo.tooltipText\\\" ng-mouseover=\\\"showTooltip($event)\\\" ng-mouseout=\\\"hideTooltip()\\\" data-tooltip-text={{widgetInfo.tooltipText}} class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='text'\\\" class=\\\"widget-body\\\">\\n        <div ng-if=\\\"widgetInfo.data\\\" class=\\\"widget-metric\\\">\\n            <div class=\\\"magnitude-container\\\">\\n                <span ng-class=\\\"{'glyphicon':widgetInfo.name==='storyLeadTime' || widgetInfo.name==='storyLiveLeadTime', 'glyphicon-arrow-up':widgetInfo.data.trend==='up', 'glyphicon-minus':widgetInfo.data.trend==='equal', 'glyphicon-arrow-down':widgetInfo.data.trend==='down'}\\\" class=\\\"symbol\\\">{{widgetInfo.data.symbol}}</span>\\n                <span class=\\\"number\\\">{{widgetInfo.data.value}}</span>\\n            </div> \\n            <span class=\\\"unit\\\">{{widgetInfo.data.unit}}</span>\\n        </div>\\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data\\\">\\n            No Data Available\\n        </h6>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='multipleTextWidget'\\\" class=\\\"widget-body\\\">\\n        <div ng-repeat=\\\"subWidget in widgetInfo.data\\\" class=\\\"sub-widget\\\" style=\\\"width:{{widgetInfo.width}};\\\">\\n            <div ng-if=\\\"(subWidget.data && subWidget.data.value !== ' ')\\\" class=\\\"widget-metric\\\" ng-click=\\\"widgetInfoClicked(subWidget.name)\\\">\\n                <div class=\\\"magnitude-container\\\">\\n                    <span class=\\\"symbol\\\">{{subWidget.data.symbol}}</span>\\n                    <span class=\\\"number\\\">{{subWidget.data.value}}</span>\\n                </div> \\n                <span class=\\\"unit\\\">{{subWidget.data.unit}}</span>\\n            </div>\\n            <h6 class=\\\"no-data\\\" ng-if=\\\"!subWidget.data\\\" ng-click=\\\"widgetInfoClicked(widgetInfo.type)\\\">\\n                No Data Available\\n            </h6>\\n            <h6 class=\\\"no-data\\\" ng-if=\\\"(subWidget.data && subWidget.data.value === ' ')\\\">\\n                {{subWidget.data.unit}}\\n            </h6>\\n            <span class=\\\"sub-widget-name\\\">{{subWidget.title}}</span>\\n        </div>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='doughnut' || widgetInfo.type==='pie'\\\" class=\\\"widget-body\\\">\\n        <div ng-if=\\\"widgetInfo.data\\\" class=\\\"graph-container\\\" ng-class=\\\"{'pie-chart':widgetInfo.type==='pie'}\\\">\\n            <h5 ng-if=\\\"widgetInfo.type==='doughnut'\\\" class=\\\"graph-inner-data\\\">{{widgetInfo.data.data[0]}}{{widgetInfo.data.symbol}}</h5>\\n            <canvas id=\\\"base\\\"\\n                class=\\\"chart-base\\\"\\n                chart-type=\\\"widgetInfo.type\\\"\\n                chart-data=\\\"widgetInfo.data.data\\\"\\n                chart-labels=\\\"widgetInfo.data.labels\\\"\\n                chart-options=\\\"widgetInfo.data.options\\\"\\n                chart-colors=\\\"widgetInfo.data.colors\\\"\\n            ></canvas>\\n        </div>\\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data\\\">\\n            No Data Available\\n        </h6>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='status'\\\" class=\\\"widget-body\\\">\\n        <i ng-if=\\\"widgetInfo.data && widgetInfo.data.response\\\" class=\\\"fa fa-thumbs-up\\\" aria-hidden=\\\"true\\\"></i>\\n        <i ng-if=\\\"widgetInfo.data && !widgetInfo.data.response\\\" class=\\\"fa fa-thumbs-down\\\" aria-hidden=\\\"true\\\"></i>\\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data\\\">\\n            No Data Available\\n        </h6>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='table'\\\" class=\\\"widget-body\\\">\\n        <div ng-if=\\\"widgetInfo.data\\\">\\n           <table class=\\\"table-widget\\\">\\n                <tr> \\n                    <td class=\\\"table-widget-header\\\"><b>Priority</b></td>\\n                    <td class=\\\"table-widget-header\\\" ng-repeat=\\\"header in widgetInfo.data\\\">{{header.priority}}</td>\\n                </tr>\\n                <tr>\\n                    <td class=\\\"table-widget-header\\\"><b>Count</b></td>\\n                    <td class=\\\"table-widget-header\\\" ng-repeat=\\\"data in widgetInfo.data\\\">{{data.count}}</td>\\n                </tr>\\n            </table>\\n           \\n        </div>\\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data\\\">\\n            No Data Available\\n        </h6>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type==='list'\\\" class=\\\"widget-body\\\">\\n        <div ng-if=\\\"widgetInfo.data\\\">\\n            <ul class=\\\"list-widget\\\" ng-repeat=\\\"item in widgetInfo.data\\\">\\n                <li><a href = \\\"https://tools.publicis.sapient.com/jira/browse/\\\"+{{item.data}}>{{item.data}}</a></li>\\n            </ul>\\n        </div>\\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data.length\\\">\\n            No Data Available\\n          \\n        </h6>\\n    </div>\\n\\n    <div ng-if=\\\"widgetInfo.type!=='text' && widgetInfo.type!=='doughnut' && widgetInfo.type!=='pie' && widgetInfo.type!=='status' && widgetInfo.type!=='multipleTextWidget'\\\" class=\\\"widget-body\\\">\\n        <canvas id=\\\"base\\\"           \\n            ng-if=\\\"widgetInfo.data\\\"\\n            class=\\\"chart-base\\\"\\n            height=\\\"200\\\"\\n            chart-type=\\\"widgetInfo.type\\\"\\n            chart-data=\\\"widgetInfo.data.data\\\"\\n            chart-labels=\\\"widgetInfo.data.labels\\\"\\n            chart-series=\\\"widgetInfo.data.series\\\"\\n            chart-options=\\\"chartModalDialog ? widgetInfo.data.dialogoptions : widgetInfo.data.options\\\"\\n            chart-colors=\\\"widgetInfo.data.colors\\\"\\n            chart-dataset-override=\\\"widgetInfo.data.datasetOverride\\\"\\n        ></canvas>            \\n        <h6 class=\\\"no-data\\\" ng-if=\\\"!widgetInfo.data\\\">\\n            No Data Available\\n        </h6>\\n    </div>\\n</div>\"","/**\r\n * Controller for the dashboard route.\r\n * Render proper template.\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module(HygieiaConfig.module + '.core')\r\n        .controller('CustomTemplateController', CustomTemplateController);\r\n\r\n    CustomTemplateController.$inject = ['$scope','$rootScope','$http', '$q', 'customDashboardData', 'dashboardData'];\r\n    function CustomTemplateController($scope, $rootScope, $http, $q, customDashboardData, dashboardData ) {\r\n        var ctrl = this,\r\n            widgetHoverText;            \r\n  \r\n        customDashboardData.fetchHelpers().then(function(response) {\r\n            ctrl.resourceHelpers = response;\r\n        });\r\n       \r\n        var pageLoad = function() {\r\n                ctrl.showRadar = false;\r\n                ctrl.startDate = '';\r\n                ctrl.endDate = '' ;\r\n                fetchProjectDetails();\r\n                widgetHoverText = customDashboardData.fetchWidgetHoverText();\r\n            },\r\n\r\n            fetchProjectDetails = function() {\r\n                customDashboardData.fetchProjectDetails().then(function(response) {\r\n                    ctrl.projectDetails = response;\r\n                });\r\n            };\r\n\r\n            ctrl.chartModalDialog= function (selectedChart) {\r\n                ctrl.selectedChart= selectedChart;\r\n                ctrl.chartdata = {};\r\n                ctrl.startDate = '';\r\n                ctrl.endDate = '';\r\n                ctrl.isCalendarOpen = false;\r\n                ctrl.isTrendOverDropdownActive = false;\r\n                switch (selectedChart) {\r\n                    case 'NoOfCheckins':\r\n                        var noOfCheckinsOptions = {\r\n                            maintainAspectRatio: false,\r\n                            tooltips: {\r\n                                enabled: false\r\n                            },\r\n                            scales: {\r\n                            yAxes: [\r\n                                {\r\n                                id: 'y-axis',\r\n                                type: 'linear',\r\n                                display: true,\r\n                                position: 'left',\r\n                                ticks: {\r\n                                    fontSize: 10\r\n                                }\r\n                                }\r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                id: 'x-axis',\r\n                                display: true,\r\n                                ticks: {\r\n                                    fontSize: 10\r\n                                },\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                                }\r\n                            ]\r\n                            }\r\n                        };\r\n                        ctrl.chartdata = _.assign({}, ctrl.noOfCheckins);\r\n                        if(ctrl.chartdata.data) {\r\n                            ctrl.chartdata['data']['dialogoptions'] = noOfCheckinsOptions;\r\n                        }\r\n                        break;\r\n                    case 'FlowEfficiency':\r\n                        ctrl.isCalendarOpen = false;\r\n                        var flowEfficiencyOptions = {\r\n                            maintainAspectRatio: false,\r\n                            tooltips: {\r\n                                enabled: false\r\n                            },\r\n                            scales: {\r\n                            yAxes: [\r\n                                {\r\n                                id: 'y-axis',\r\n                                type: 'linear',\r\n                                display: true,\r\n                                position: 'left',\r\n                                ticks: {\r\n                                    fontSize: 10\r\n                                }\r\n                                }\r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                id: 'x-axis',\r\n                                display: true,\r\n                                ticks: {\r\n                                    fontSize: 10\r\n                                },\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                                }\r\n                            ]\r\n                            }\r\n                        }\r\n                        ctrl.chartdata = _.assign({}, ctrl.flowEfficiency);\r\n                        if(ctrl.chartdata.data) {\r\n                            ctrl.chartdata['data']['dialogoptions'] = flowEfficiencyOptions;\r\n                        }\r\n                    break;\r\n\r\n                    case 'CfdData':\r\n                        ctrl.isCalendarOpen = false;\r\n                        var cfdDataOptions = {\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            tooltips: {\r\n                                enabled: false\r\n                            },\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    stacked: true,\r\n                                    ticks  : {\r\n                                        beginAtZero: true,\r\n                                        fontSize: 10\r\n                                    }\r\n                                }],\r\n                                xAxes: [{\r\n                                    stacked: true,\r\n                                    ticks  : {\r\n                                        beginAtZero: true,\r\n                                        fontSize: 10\r\n                                    }\r\n                                }]\r\n                            },\r\n                            fontSize: 20,\r\n                            legend: {\r\n                                display: true,\r\n                                position: 'bottom',\r\n                                labels: {\r\n                                    boxWidth: 10,\r\n                                    fontSize: 14\r\n                                }\r\n                            }\r\n                        };\r\n                        ctrl.chartdata = _.assign({}, ctrl.cfdData);\r\n                        if(ctrl.chartdata.data) {\r\n                            ctrl.chartdata['data']['dialogoptions'] = cfdDataOptions;\r\n                        }\r\n                    break;\r\n\r\n                    case 'AppDemonstration':\r\n                        ctrl.isCalendarOpen = false;\r\n                        var appDemonstrationOptions = {\r\n                            maintainAspectRatio: false,\r\n                            tooltips: {\r\n                                enabled: false\r\n                            },\r\n                            scales: {\r\n                            yAxes: [\r\n                                {\r\n                                id: 'y-axis',\r\n                                type: 'linear',\r\n                                display: true,\r\n                                position: 'left',\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    fontSize: 10,\r\n                                    fixedStepSize: 1\r\n                                }\r\n                                }\r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                id: 'x-axis',\r\n                                display: true,\r\n                                ticks: {\r\n                                    fontSize: 12\r\n                                },\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                                }\r\n                            ]\r\n                            }\r\n                        };\r\n                        ctrl.chartdata = _.assign({}, ctrl.appDemonstration);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] = appDemonstrationOptions;\r\n                        }                        \r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            };\r\n\r\n            ctrl.applyTrendOverDates = function(selectedDates) {\r\n                ctrl.chartdata = {};\r\n                ctrl.startDate = selectedDates && selectedDates.startDate || '' ;\r\n                ctrl.endDate = selectedDates && selectedDates.endDate || '';\r\n                ctrl.selectedFromSprintList = '';\r\n                ctrl.selectedToSprintList = '';\r\n                switch (ctrl.selectedChart) {\r\n                    case 'autoPercentage':\r\n                        ctrl.fetchTrendOverAutoVsManualTest();\r\n                        break; \r\n                    case 'functionalTestExecutionTime':\r\n                        ctrl.fetchTrendOverFunctionalTestExecutionTime();\r\n                        break;\r\n                    case 'codeBuildTime':\r\n                        ctrl.fetchTrendOverCodeBuildTime();\r\n                        break;\r\n                    case 'timeToFixBrokenBuild':\r\n                        ctrl.fetchTrendOverTimeToFixedBroken();\r\n                        break;\r\n                    case 'backEndJUnit':\r\n                        ctrl.fetchTrendOverBackEndJUnit();\r\n                        break;\r\n                    case 'frontEndJSUnit':\r\n                        ctrl.fetchTrendOverFrontEndJUnit();\r\n                        break;\r\n                    case 'sprintPredictability':\r\n                        ctrl.fetchAllSprintList();\r\n                        ctrl.fetchTrendOverSprintPredictability();\r\n                        break;\r\n                    case 'commitmentReliability':\r\n                        ctrl.fetchAllSprintList();\r\n                        ctrl.fetchTrendOverCommitmentReliability();\r\n                        break;\r\n                    case 'storyLeadTime':\r\n                        ctrl.fetchAllSprintListWithoutStatus();\r\n                        ctrl.fetchTrendOverStoryLeadTime();\r\n                        break;\r\n                    case 'storyLiveLeadTime':\r\n                        ctrl.fetchAllSprintListWithoutStatus();\r\n                        ctrl.fetchTrendOverStoryLiveLeadTime();\r\n                        break;\r\n                    default:\r\n                        ctrl.isTrendOverDropdownActive = false;\r\n                        ctrl.isCalendarOpen = false;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            ctrl.trendOverChartModal = function() {\r\n                ctrl.chartdata = {};\r\n                ctrl.isTrendOverDropdownActive = false;\r\n                switch (ctrl.selectedChart) {\r\n                    case 'autoPercentage':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverAutoVsManualTest);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'functionalTestExecutionTime':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverFunctionalTestExecutionTime);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                         }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'codeBuildTime':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverCodeBuildTime);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                         }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'timeToFixBrokenBuild':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverTimeToFixedBrokenBuild);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                         }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'codeQuality':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverCodeQuality);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;  \r\n                    case 'backEndJUnit':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverBackEndJUnit);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'frontEndJSUnit':\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverFrontEndJUnit);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        ctrl.startDate = ctrl.chartdata.startDate || '';\r\n                        ctrl.endDate = ctrl.chartdata.endDate || '';\r\n                        ctrl.isCalendarOpen = true;\r\n                        break;\r\n                    case 'sprintPredictability':\r\n                        ctrl.isCalendarOpen = false;\r\n                        ctrl.isTrendOverDropdownActive = true;\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverSprintPredictability);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.isApplyTrendOverActive =  false;\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        if(ctrl.chartdata.fromSprint && ctrl.chartdata.toSprint) {\r\n                            ctrl.setFromToSplitList(ctrl.chartdata.fromSprint, ctrl.chartdata.toSprint)\r\n                        }\r\n                        ctrl.tooltipText = ctrl.chartdata.tooltipText;\r\n                        ctrl.paramSprintList = [];\r\n                        break;\r\n                    case 'commitmentReliability':\r\n                        ctrl.isCalendarOpen = false;\r\n                        ctrl.isTrendOverDropdownActive = true;\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverCommitmentReliability);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.isApplyTrendOverActive =  false;\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        if(ctrl.chartdata.fromSprint && ctrl.chartdata.toSprint) {\r\n                            ctrl.setFromToSplitList(ctrl.chartdata.fromSprint, ctrl.chartdata.toSprint)\r\n                        }\r\n                        ctrl.tooltipText = ctrl.chartdata.tooltipText;\r\n                        ctrl.paramSprintList = [];\r\n                        break;\r\n                    case 'storyLeadTime':\r\n                        ctrl.isCalendarOpen = false;\r\n                        ctrl.isTrendOverDropdownActive = true;\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverStoryLeadTime);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.isApplyTrendOverActive =  false;\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        if(ctrl.chartdata.fromSprint && ctrl.chartdata.toSprint) {\r\n                            ctrl.setFromToSplitList(ctrl.chartdata.fromSprint, ctrl.chartdata.toSprint)\r\n                        }\r\n                        ctrl.tooltipText = ctrl.chartdata.tooltipText;\r\n                        ctrl.paramSprintList = [];\r\n                        break;\r\n                    case 'storyLiveLeadTime':\r\n                        ctrl.isCalendarOpen = false;\r\n                        ctrl.isTrendOverDropdownActive = true;\r\n                        ctrl.chartdata = _.assign({}, ctrl.trendOverStoryLiveLeadTime);\r\n                        if(ctrl.chartdata['data']) {\r\n                            ctrl.isApplyTrendOverActive =  false;\r\n                            ctrl.chartdata['data']['dialogoptions'] =  ctrl.chartdata['data']['options'];\r\n                        }\r\n                        if(ctrl.chartdata.fromSprint && ctrl.chartdata.toSprint) {\r\n                            ctrl.setFromToSplitList(ctrl.chartdata.fromSprint, ctrl.chartdata.toSprint)\r\n                        }\r\n                        ctrl.tooltipText = ctrl.chartdata.tooltipText;\r\n                        ctrl.paramSprintList = [];\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n            ctrl.fromToSplitList = function(){\r\n                var fromSprint = ctrl.selectedFromSprintList && ctrl.selectedFromSprintList.split(\".\");\r\n                var toSprint = ctrl.selectedToSprintList && ctrl.selectedToSprintList.split(\".\");\r\n                var sprintList = [];\r\n                var fromCounter = fromSprint && parseInt(fromSprint[0]);\r\n                var toCounter = toSprint && parseInt(toSprint[0]);\r\n                if(fromCounter && toCounter && fromCounter >= toCounter){\r\n                   ctrl.errorMessage = 'To sprint must be greater than from sprint';\r\n                   ctrl.isApplyTrendOverActive = true;\r\n                }else {\r\n                    ctrl.isApplyTrendOverActive = false;\r\n                    ctrl.errorMessage = '';\r\n                    ctrl.allSprintList.forEach(function(item) {\r\n                        var sprint = item.split(\".\");\r\n                        if(fromCounter && toCounter && fromCounter <= toCounter && (parseInt(sprint[0]) >= fromCounter && parseInt(sprint[0]) <=toCounter)) {\r\n                            sprintList.push(item)\r\n                        }\r\n                    }, this);\r\n                }\r\n                ctrl.paramSprintList = sprintList;\r\n            }\r\n\r\n            ctrl.setFromToSplitList = function(fromSprint, toSprint){              \r\n                ctrl.allSprintList.forEach(function(item) {\r\n                    var sprint = item.split(\".\");\r\n                    if(sprint[1].trim() == fromSprint.trim()) {\r\n                        ctrl.selectedFromSprintList = item\r\n                    }\r\n                    if(sprint[1].trim() === toSprint.trim()){\r\n                        ctrl.selectedToSprintList = item\r\n                    }\r\n                }, this);              \r\n            }\r\n\r\n            ctrl.customWidgetClick = function(widgetType) {\r\n                ctrl.chartdata = {};\r\n                ctrl.selectedChart = widgetType;                \r\n                ctrl.applyTrendOverDates();\r\n            }\r\n\r\n            ctrl.fetchStoryDORtoDOD = function() {\r\n                var route = '/api/jiraMVP/DorToDod';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'storyDorToDod',\r\n                        title: 'Definition of Ready (DoR) to Definition of Done (DoD)',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.storyDorToDod,\r\n                        data: (response.storyLeadTime && response.storyLeadTime.value) ? response.storyLeadTime : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchStoryDODtoLive = function() {\r\n                var route = '/api/jiraMVP/DodToLive';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'storyDodToLive',\r\n                        title: 'Definition of Done to Live',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.storyDodToLive,\r\n                        data: (response.storyLiveLeadTime && response.storyLiveLeadTime.value) ? response.storyLiveLeadTime : null\r\n                    };\r\n                 });\r\n            };\r\n            \r\n            ctrl.fetchStoryLeadTime = function() {\r\n                var route = '/api/jiraMVP/leadTime';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'storyLeadTime',\r\n                        title: 'Lead Time',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.storyLeadTime,\r\n                        data: (response.storyLeadTime && response.storyLeadTime.value) ? response.storyLeadTime : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchStoryBacklogtoDOR = function() {\r\n                var route = '/api/jiraMVP/backlogToDor';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'storyBacklogToDor',\r\n                        title: 'Backlog to Definition of Ready (DoR)',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.storyBacklogToDor,\r\n                        data: (response.storyLeadTime && response.storyLeadTime.value) ? response.storyLeadTime : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchDefectInjectionRate = function() {\r\n                var route = '/api/jiraMVP/defectinjectionrate';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'defectInjectionRate',\r\n                        title: 'Defect Injection Rate',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.defectInjectionRate,\r\n                        data: (response.defectInjectionRate && response.defectInjectionRate.value) ? response.defectInjectionRate : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchDefectInjectionRatePostlive = function() {\r\n                var route = '/api/jiraMVP/defectinjectionratepostlive';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'defectInjectionRatePostLive',\r\n                        title: 'Defect Injection Rate Post Live',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.defectInjectionRatePostLive,\r\n                        data: (response.defectInjectionRatePostLive && response.defectInjectionRatePostLive.value) ? response.defectInjectionRatePostLive : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchDeploymentFrequency = function() {\r\n                var route = '/api/excel/deployFrequency';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                    \t name: 'deploymentFrequency',\r\n                         title: 'Deployment Frequency',\r\n                         type: 'line',\r\n                        tooltipText: widgetHoverText.deploymentFrequency,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchNoOfCheckins = function() {\r\n                var route = '/api/ed/commit';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n                    var noOfCheckins = {\r\n                        name: 'noOfCheckins',\r\n                        title: 'Number of Check-in Per Day in Master',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.noOfCheckins,\r\n                        data: graphData\r\n                    };\r\n                    ctrl.noOfCheckins = noOfCheckins;\r\n                    return noOfCheckins;\r\n                 }); \r\n            };\r\n\r\n            ctrl.fetchFlowEfficiency = function() {\r\n                var route = '/api/excel/flowefficiency';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n                    var flowEfficiency = {\r\n                        name: 'flowEfficiency',\r\n                        title: 'Flow Efficiency',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.flowEfficiency,\r\n                        data: graphData\r\n                    };\r\n                    ctrl.flowEfficiency = flowEfficiency;\r\n                    return flowEfficiency;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchCfdData = function() {\r\n                var route = '/api/jiraMVP/cfddetails';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response && response.countList) {\r\n                        graphData = {\r\n                            data: response.countList,\r\n                            labels: response.monthList,\r\n                            series: response.statusList,\r\n                            colors: [\r\n                                '#3f0f99',\r\n                                '#f4424e',\r\n                                '#2b3547',\r\n                                '#1194db',\r\n                                '#24513f',\r\n                                '#09f9d9'\r\n                            ],\r\n                            options: {\r\n                                responsive: true,\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                    yAxes: [{\r\n                                        stacked: true,\r\n                                        ticks  : {\r\n                                            beginAtZero: true,\r\n                                            fontSize: 3\r\n                                        }\r\n                                    }],\r\n                                    xAxes: [{\r\n                                        stacked: true,\r\n                                        ticks  : {\r\n                                            beginAtZero: true,\r\n                                            fontSize: 3\r\n                                        }\r\n                                    }]\r\n                                },\r\n                                fontSize: 8,\r\n                                legend: {\r\n                                    display: true,\r\n                                    position: 'bottom',\r\n                                    labels: {\r\n                                        boxWidth: 3,\r\n                                        fontSize: 3\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                    var cfdData = {\r\n                        name: 'cfd',\r\n                        title: 'Cumulative Flow Diagram',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.cfd,\r\n                        data: graphData\r\n                    };\r\n                    ctrl.cfdData = cfdData;\r\n                    return cfdData;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchEnvCreationTime = function() {\r\n                var route = '/api/ed/citime';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'envCreationTime ',\r\n                        title: 'Time to Create a New Environment',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.envCreationTime,\r\n                        data: (response.envCreationTime && response.envCreationTime.value) ? response.envCreationTime : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchHappinessIndex = function() {\r\n                var route = '/api/excel/happinessindex';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                scales: {\r\n                                    xAxes: [{\r\n                                        display: false\r\n                                    }],\r\n                                    yAxes: [{\r\n                                        ticks: {\r\n                                            beginAtZero: true\r\n                                        }\r\n                                    }]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                hoverBackgroundColor: '#2d9b4f',\r\n                                backgroundColor: '#5fb24f',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                        name: 'happinessIndex',\r\n                        title: 'Happiness Index',\r\n                        type: 'bar',\r\n                        tooltipText: widgetHoverText.happinessIndex,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchAppDemonstration = function() {\r\n                var route = '/api/excel/appdemonstration';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            colors: [\r\n                                '#f8b2b5'\r\n                            ],\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#ad1852'\r\n                            }\r\n                        };\r\n                    }\r\n                    var appDemonstration = {\r\n                        name: 'appDemonstration',\r\n                        title: 'Completed Stories are Demonstrated to Product Owner',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.appDemonstration,\r\n                        data: graphData\r\n                    };\r\n                    ctrl.appDemonstration = appDemonstration;\r\n                    return appDemonstration;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchSprintPredictability = function() {\r\n                var route = '/api/jiraMVP/sprintpredictability';\r\n                \r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData,\r\n                        sprintPredictablity;\r\n                   \r\n                    if(response && response.sprintPredictablity && response.sprintPredictablity.value) {\r\n                        sprintPredictablity = response.sprintPredictablity.value;\r\n                    }\r\n                      \r\n                    if(sprintPredictablity) {\r\n                        var fillSprintPredictablityPercentage = parseInt(sprintPredictablity) > 100 ? 100 : sprintPredictablity\r\n                        graphData = {\r\n                            data: [sprintPredictablity, 100-fillSprintPredictablityPercentage],\r\n                            symbol: response.sprintPredictablity.unit,\r\n                            colors: [\r\n                                '#2779bc',\r\n                                '#e2e2e2'\r\n                            ],\r\n                            options: {\r\n                                legend: {\r\n                                    display: false\r\n                                },\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                cutoutPercentage: 70\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                        name: 'sprintPredictablity',\r\n                        title: 'Sprint Predictability',\r\n                        type: 'doughnut',\r\n                        tooltipText: widgetHoverText.sprintPredictablity,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchReleaseDeployTime = function() {\r\n                var route = '/api/ed/citime';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'releaseDeployTime',\r\n                        title: 'Release and Deploy Time',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.releaseDeployTime,\r\n                        data: (response.relAndDeployTime && response.relAndDeployTime.value) ? response.relAndDeployTime : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchAutoVsManualTest = function() {\r\n                var route ='/api/excel/autovsmanualtest';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData,\r\n                        autoPercentage;\r\n\r\n                    if(response && response.autoPercentage && response.autoPercentage.value) {\r\n                        autoPercentage = response.autoPercentage.value;\r\n                    }\r\n\r\n                    if(autoPercentage) {\r\n                        var fillAutoPercentage = parseInt(autoPercentage) > 100 ? 100 : autoPercentage\r\n                        graphData = {\r\n                            data: [autoPercentage, 100-fillAutoPercentage],\r\n                            labels: ['Automated', 'Manual'],\r\n                            colors: [\r\n                                '#b2174f',\r\n                                '#e2e2e2'\r\n                            ],\r\n                            options: {\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                    var autoVsManualTest = {\r\n                        name: 'autoPercentage',\r\n                        title: 'Automated Test %',\r\n                        type: 'pie',\r\n                        tooltipText: widgetHoverText.autoPercentage,\r\n                        data: graphData\r\n                    };\r\n\r\n                    ctrl.autoVsManualTest = autoVsManualTest;\r\n                    return autoVsManualTest;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchCodeQuality = function() {\r\n                var route = '/api/mdquality/static-analysis';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    console.log('comone', response)\r\n                    var graphData,\r\n                        qualityGrade,\r\n                        colors = [\r\n                            '#e2e2e2',\r\n                            '#e2e2e2',\r\n                            '#e2e2e2',\r\n                            '#e2e2e2',\r\n                            '#e2e2e2'\r\n                        ];\r\n\r\n                    qualityGrade = (response && response.qualityGrade) ? response.qualityGrade : null;\r\n                    //qualityGrade = 'A';\r\n\r\n                    switch(qualityGrade) {\r\n                        case 'A':\r\n                            qualityGrade = 5;\r\n                            break;\r\n                        case 'B':\r\n                            qualityGrade = 4;\r\n                            break;\r\n                        case 'C':\r\n                            qualityGrade = 3;\r\n                            break;\r\n                        case 'D':\r\n                            qualityGrade = 2;\r\n                            break;\r\n                        case 'E':\r\n                            qualityGrade = 1;\r\n                            break;\r\n                    };\r\n\r\n                    colors[qualityGrade-1] = '#b2174f';\r\n\r\n                    if(qualityGrade) {\r\n                        graphData = {\r\n                            data: [1,2,3,4,5],\r\n                            labels: ['E','D','C','B','A'],\r\n                            colors: colors,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true,\r\n                                    callbacks: {\r\n                                        label: function() {\r\n                                            return \"\";\r\n                                        }\r\n                                    }\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                        display: false,\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                        display: true,\r\n                                        ticks: {\r\n                                            fontSize: 7\r\n                                          },\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                        name: 'codeQuality',\r\n                        title: 'Code Quality',\r\n                        type: 'bar',\r\n                        tooltipText: widgetHoverText.codeQuality,\r\n                        data: qualityGrade !== 'NA' ? graphData : undefined\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchJUnitCoverage = function() {\r\n                var route = '/api/mdquality/static-analysis';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var data,\r\n                        coveragePercentage,\r\n                        jscoveragePercentage;\r\n\r\n                    if(response && response.coveragePercentage && response.coveragePercentage.value) {\r\n                        coveragePercentage = response.coveragePercentage;\r\n                    }\r\n\r\n                    if(response && response.jscoveragePercentage && response.jscoveragePercentage.value) {\r\n                        jscoveragePercentage = response.jscoveragePercentage;\r\n                    }\r\n\r\n                   data = [\r\n                        {\r\n                            name: 'backEndJUnit',\r\n                            title: 'Back End Code Coverage',\r\n                            data: coveragePercentage ? coveragePercentage : null\r\n                        },\r\n                        {\r\n                            name: 'frontEndJSUnit',\r\n                            title: 'Front End Code Coverage',\r\n                            data: jscoveragePercentage ? jscoveragePercentage : null\r\n                        }\r\n                    ];\r\n\r\n                    return {\r\n                        name: 'coveragePercentage',\r\n                        title: 'Coverage',\r\n                        type: 'multipleTextWidget',\r\n                        tooltipText: widgetHoverText.coveragePercentage,\r\n                        width: (100/data.length)+'%',\r\n                        data: data\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchPassPercent = function() {\r\n                var route = '/api/mdquality/static-analysis';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var data,\r\n                        jUnitSuccessPercentage,\r\n                        jsJUnitSuccessPercentage;\r\n\r\n                    if(response && response.jUnitSuccessPercentage && response.jUnitSuccessPercentage.value) {\r\n                        jUnitSuccessPercentage = response.jUnitSuccessPercentage;\r\n                    }\r\n\r\n                    if(response && response.jsJUnitSuccessPercentage && response.jsJUnitSuccessPercentage.value) {\r\n                        jsJUnitSuccessPercentage = response.jsJUnitSuccessPercentage;\r\n                    }\r\n\r\n                   data = [\r\n                        {\r\n                            title: 'Pass %',\r\n                            data: jUnitSuccessPercentage ? jUnitSuccessPercentage : null\r\n                        },\r\n                        {\r\n                            title: 'JS Pass %',\r\n                            data: jsJUnitSuccessPercentage ? jsJUnitSuccessPercentage : null\r\n                        }\r\n                    ];\r\n\r\n                    return {\r\n                        name: 'passPercentage',\r\n                        title: 'Pass %',\r\n                        type: 'multipleTextWidget',\r\n                        tooltipText: widgetHoverText.passPercentage,\r\n                        width: (100/data.length)+'%',\r\n                        data: data\r\n                    };\r\n                 });\r\n            };  \r\n\r\n            ctrl.fetchImprovement = function() {\r\n                var route = '/api/excel/improvement';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'improvement',\r\n                        title: 'Improvement',\r\n                        type: 'status',\r\n                        tooltipText: widgetHoverText.improvement,\r\n                        data: (response && response.response !== undefined) ? response : null\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchCITime = function() {\r\n                var fetchFixTime = function() {\r\n                        var route = '/api/ed/citime';\r\n                        return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                            return (response.fixTimeSVU && response.fixTimeSVU.value) ? response.fixTimeSVU : null;\r\n                         });\r\n                    },\r\n\r\n                    fetchBuildTime = function() {\r\n                        var route = '/api/ed/citime';\r\n                        return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                            return (response.buildTimeSVU && response.buildTimeSVU.value) ? response.buildTimeSVU : null;\r\n                         });\r\n                    },\r\n\r\n                    fetchSumTestExecution = function() {\r\n                        var route = '/api/excel/autovsmanualtest';\r\n                        return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                            return (response.sumTestExecution && response.sumTestExecution.value) ? response.sumTestExecution : null;\r\n                         });\r\n                    },\r\n\r\n                    deferred = $q.defer();\r\n\r\n                    $q.all([\r\n\r\n                        fetchFixTime(),\r\n                        fetchBuildTime(),\r\n                        fetchSumTestExecution()\r\n\r\n                    ]).then(function(response) {\r\n                        var data = [\r\n                                {\r\n                                    name: 'timeToFixBrokenBuild',\r\n                                    title: 'Time to fix a Broken Build',\r\n                                    data: response[0] ? response[0] : null\r\n                                },\r\n                                {\r\n                                    name:'codeBuildTime',\r\n                                    title: 'Code Build Time',\r\n                                    data: response[1] ? response[1] : null\r\n                                },\r\n                                {\r\n                                    name:'functionalTestExecutionTime',\r\n                                    title: 'Functional Test Execution Time',\r\n                                    data: response[2] ? response[2] : null\r\n                                }\r\n                            ],\r\n                            widgetData = {\r\n                                name: 'citime',\r\n                                title: 'CI Time',\r\n                                type: 'multipleTextWidget',\r\n                                tooltipText: widgetHoverText.citime,\r\n                                width: (100/data.length)+'%',\r\n                                data: data\r\n                            };\r\n                        deferred.resolve(widgetData);\r\n                    });\r\n\r\n                    return deferred.promise;\r\n            };          \r\n\r\n            ctrl.showMaturityRadar = function(event) {\r\n                var button = $('.radar-button');\r\n                ctrl.showRadar = !ctrl.showRadar;\r\n                if(ctrl.showRadar) {\r\n                    button.text('Executive Dashboard');\r\n                }else {\r\n                    button.text('Maturity Radar');\r\n                    d3.select(\".maturity-radar\").select(\"svg\").remove();\r\n                }\r\n            };\r\n\r\n            ctrl.commitmentReliability = function() {\r\n                var route = '/api/jiraMVP/commitmentReliability';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'commitmentReliability',\r\n                        title: 'Commitment Reliability',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.commitmentReliability,\r\n                        data: (response.commitmentReliability && response.commitmentReliability.value) ? response.commitmentReliability : null\r\n                    };\r\n                 });\r\n            };\r\n            \r\n            ctrl.fetchRisks = function(){\r\n                var route = '/api/jiraMVP/risks';\r\n               \r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'risks',\r\n                        title: 'Risks',\r\n                        type: 'list',\r\n                        tooltipText: widgetHoverText.risks,\r\n                        data:response.dataCount || null\r\n                    };\r\n                });\r\n            };\r\n\r\n            ctrl.fetchTopIssues = function(){\r\n                var route = '/api/jiraMVP/topIssues';\r\n               \r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'topIssues',\r\n                        title: 'Top Issues',\r\n                        type: 'list',\r\n                        tooltipText: widgetHoverText.topIssues,\r\n                        data:response.dataCount || null\r\n                    };\r\n                });\r\n            };\r\n            \r\n            ctrl.fetchIssues = function(){\r\n                var route = '/api/jiraMVP/issues';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'issues',\r\n                        title: 'Issues',\r\n                        type: 'list',\r\n                        tooltipText: widgetHoverText.issues,\r\n                       data:response.dataCount || null\r\n                    };\r\n                });\r\n            };\r\n            \r\n            ctrl.fetchAgingIssue = function(){\r\n                var route = '/api/jiraMVP/agingIssue';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                \treturn {\r\n                        name: 'agingIssue',\r\n                        title: 'Aging Issue',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.agingIssue,\r\n                        data: (response.agingIssueLevel && response.agingIssueLevel.value) ? response.agingIssueLevel : null\r\n                        //data: '{\"agingIssueLevel\":{\"symbol\":\"\",\"value\":\"65\",\"unit\":\"%\"}}'\r\n                    };\r\n                });\r\n            };\r\n            \r\n            ctrl.fetchTechDebt = function(){\r\n                var route = '/api/jiraMVP/techDebt';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'techDebt',\r\n                        title: 'Tech Debt',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.techDebt,\r\n                        data: (response.techDebt && response.techDebt.value) ? response.techDebt : null\r\n                    };\r\n                });\r\n            };\r\n            \r\n            ctrl.fetchSonarTechDebt = function(){\r\n                var route =  '/api/mdquality/static-analysis';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'techDebt',\r\n                        title: 'Sonar Tech Debt',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.sonarTechDebt,\r\n                        data: (response.techDebt && response.techDebt.value) ? response.techDebt : null\r\n                    };\r\n                });\r\n            };\r\n            \r\n           /* ctrl.fetchAssignValueMetric = function() {\r\n                var route = '/api/jiraMVP/assignedMetrics';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData,\r\n                    assignedValuePercentage;\r\n                    \r\n                    if(response && response.assignedValuePercentage && response.assignedValuePercentage.value) {\r\n                    \tassignedValuePercentage = response.assignedValuePercentage;\r\n                    }\r\n\r\n                    if(assignedValuePercentage) {\r\n                        var fillAssignedValuePercentage = parseInt(assignedValuePercentage.value) > 100 ? 100 : assignedValuePercentage.value\r\n                        graphData = {\r\n                            data: [assignedValuePercentage.value, 100-fillAssignedValuePercentage],\r\n                            symbol:\"%\",\r\n                            colors: [\r\n                                '#2779bc',\r\n                                '#e2e2e2'\r\n                            ],\r\n                            options: {\r\n                                legend: {\r\n                                    display: false\r\n                                },\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                cutoutPercentage: 70\r\n                            }\r\n                        };\r\n                   }\r\n                    return {\r\n                        name: 'assignedValuePercentage',\r\n                        title: 'Assign Value Metrics',\r\n                        type: 'doughnut',\r\n                        tooltipText: widgetHoverText.assignedValuePercentage,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };           \r\n            */\r\n            ctrl.fetchAssignValueMetric = function() {\r\n                var route = '/api/jiraMVP/assignedMetrics';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'assignedValuePercentage',\r\n                        title: 'Assign Value Metrics',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.assignedValuePercentage,\r\n                        data: (response.assignedValuePercentage && response.assignedValuePercentage.value) ? response.assignedValuePercentage : null\r\n                    };\r\n                 });\r\n            };\r\n           \r\n/*            ctrl.fetchBacklogHealth = function() {\r\n                var route = '/api/jiraMVP/backlogHealth';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData,\r\n                    backlogHealthPercentage;\r\n                    \r\n                    if(response && response.backlogHealthPercentage && response.backlogHealthPercentage.value) {\r\n                    \tbacklogHealthPercentage = response.backlogHealthPercentage;\r\n                    }\r\n                    if(backlogHealthPercentage) {\r\n                        var color  = ctrl.resourceHelpers && ctrl.resourceHelpers.backlogHealthBackgroundColor && ctrl.resourceHelpers.backlogHealthBackgroundColor[colorType]                       \r\n                        var fillBacklogHealthPercentage = parseInt(backlogHealthPercentage.value) > 100 ? 100 : backlogHealthPercentage.value\r\n                        graphData = {\r\n                            data: [backlogHealthPercentage.value, 100-fillBacklogHealthPercentage],\r\n                            symbol:\"%\",\r\n                            colors: [\r\n                                color,\r\n                                '#e2e2e2'\r\n                            ],\r\n                            options: {\r\n                                legend: {\r\n                                    display: false\r\n                                },\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                cutoutPercentage: 70\r\n                            }\r\n                        };\r\n                   }\r\n                    return {\r\n                        name: 'backlogHealthPercentage',\r\n                        title:'Backlog Health',\r\n                        type: 'doughnut',\r\n                        tooltipText: widgetHoverText.backlogHealthPercentage,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };  */   \r\n            ctrl.fetchBacklogHealth = function() {\r\n                var route = '/api/jiraMVP/backlogHealth';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'backlogHealthPercentage',\r\n                        title: 'Backlog Health',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.backlogHealthPercentage,\r\n                        data: (response.backlogHealthPercentage && response.backlogHealthPercentage.value) ? response.backlogHealthPercentage : null\r\n                    };\r\n                 });\r\n            };\r\n            \r\n            ctrl.fetchAssignValueTrend = function() {\r\n                var route = '/api/jiraMVP/assignedMetricsTrend';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      }\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 4\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                        name: 'assignmentTrend',\r\n                        title: 'Trend for Assign Value Metrics',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.assignmentValueTrend,\r\n                        data: graphData\r\n                    };\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverAutoVsManualTest = function() {\r\n                var route = '/api/trend/automation?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverAutoVsManualTest = {\r\n                        name: 'TrendOverAutomation',\r\n                        title: 'Trend over automation',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverAutoVsManual,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverAutoVsManualTest = trendOverAutoVsManualTest;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverAutoVsManualTest;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverFunctionalTestExecutionTime = function() {\r\n                var route = '/api/trend/functionaltest?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverFunctionalTestExecutionTime = {\r\n                        name: 'trendOverFunctionalTestExecutionTime',\r\n                        title: 'Trend over functional test execution',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverFunctionalTestExecutionTime,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverFunctionalTestExecutionTime = trendOverFunctionalTestExecutionTime;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverFunctionalTestExecutionTime;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverCodeBuildTime = function() {\r\n                var route = '/api/trend/buildTimeTrend?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverCodeBuildTime = {\r\n                        name: 'trendOverCodeBuildTime',\r\n                        title: 'Trend over Code Build Time',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverCodeBuildTime,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverCodeBuildTime = trendOverCodeBuildTime;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverCodeBuildTime;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverTimeToFixedBroken = function() {\r\n                var route = '/api/trend/fixTimeTrend?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverTimeToFixedBrokenBuild = {\r\n                        name: 'trendOverTimeToFixedBrokenBuild',\r\n                        title: 'Trend over time to fixed broken build',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverTimeToFixedBrokenBuild,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverTimeToFixedBrokenBuild = trendOverTimeToFixedBrokenBuild;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverTimeToFixedBrokenBuild;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverCodeQuality = function() {\r\n                var route = '/api/trend/codequalitytrend?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n                    if(response.data && response.data.length) {\r\n                        var data = [];\r\n                        var unique = {};\r\n                        var distinct = [];\r\n                        var gradeItem = [\"E\",\"D\",\"C\",\"B\",\"A\"];\r\n                        response.data.forEach(function(item){\r\n                            if(!unique[item]) {\r\n                                distinct.push(item);\r\n                                unique[item] = true;                              \r\n                            }\r\n                            data.push(gradeItem.indexOf(item));\r\n                        })\r\n                       \r\n                        graphData = {\r\n                            data: data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: false\r\n                                },\r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',     \r\n                                      ticks: {\r\n                                        beginAtZero: true,                                       \r\n                                        min: 0,\r\n                                        stepSize: 1,\r\n                                        max:4,\r\n                                        callback: function(value, index, values) {                                         \r\n                                          return [\"A\",\"B\",\"C\",\"D\",\"E\"][index];\r\n                                        },\r\n                                        autoSkip: true,\r\n                                        maxTicksLimit: data.length\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in ' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false                                       \r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverCodeQuality = {\r\n                        name: 'trendOverCodeQuality',\r\n                        title: 'Trend over Code quality',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverCodeQuality,\r\n                        data: graphData,\r\n                        startDate: response.startDate || '',\r\n                        endDate: response.endDate || ''\r\n                    };\r\n\r\n                    ctrl.trendOverCodeQuality = trendOverCodeQuality;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverCodeQuality;\r\n             });\r\n            };\r\n\r\n            ctrl.fetchTrendOverBackEndJUnit = function() {\r\n                var route = '/api/trend/backendjunittrend?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverBackEndJUnit = {\r\n                        name: 'trendOverBackEndJUnit',\r\n                        title: 'Trend over back end JUnit',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverBackEndJUnit,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverBackEndJUnit = trendOverBackEndJUnit;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverBackEndJUnit;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverFrontEndJUnit = function() {\r\n                var route = '/api/trend/frontendjunittrend?startDate='+ctrl.startDate+'&endDate='+ctrl.endDate+'';\r\n                 return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n\r\n                    if(response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                               return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '') \r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverFrontEndJUnit = {\r\n                        name: 'trendOverFrontEndJUnit',\r\n                        title: 'Trend over front end JUnit',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverFrontEndJUnit,\r\n                        data: graphData,\r\n                        startDate: response.startDate,\r\n                        endDate: response.endDate\r\n                    };\r\n\r\n                    ctrl.trendOverFrontEndJUnit = trendOverFrontEndJUnit;\r\n                    ctrl.trendOverChartModal();\r\n                    return trendOverFrontEndJUnit;\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverSprintPredictability = function() {\r\n                var route = '/api/trend/sprintPredictability';\r\n                return customDashboardData.sendWidgetDetails(route, ctrl.paramSprintList || []).then(function(response) {\r\n                    var graphData;\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                            if(response.unit === '%') {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }else {\r\n                                                return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '')  \r\n                                            }\r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        autoSkip: false\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverSprintPredictability = {\r\n                        name: 'trendOverSprintPredictability',\r\n                        title: 'Trend over sprint predictability',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverSprintPredictability,\r\n                        data: graphData,                       \r\n                        fromSprint: response && response.fromSprint || '',\r\n                        toSprint: response && response.toSprint || ''                     \r\n                    };\r\n\r\n                    ctrl.trendOverSprintPredictability = trendOverSprintPredictability;\r\n                    ctrl.trendOverChartModal();\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverCommitmentReliability = function() {\r\n                var route = '/api/trend/commitmentReliability';\r\n                return customDashboardData.sendWidgetDetails(route, ctrl.paramSprintList || []).then(function(response) {\r\n                    var graphData;\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                            if(response.unit === '%') {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }else {\r\n                                                return parseFloat(Math.round(label * 100) / 100).toFixed(2) + (response.unit || '')  \r\n                                            }\r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        autoSkip: false\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverCommitmentReliability = {\r\n                        name: 'trendOverCommitmentReliability',\r\n                        title: 'Trend over Commitment Reliability',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverCommitmentReliability,\r\n                        data: graphData,                       \r\n                        fromSprint: response && response.fromSprint || '',\r\n                        toSprint: response && response.toSprint || ''                     \r\n                    };\r\n\r\n                    ctrl.trendOverCommitmentReliability = trendOverCommitmentReliability;\r\n                    ctrl.trendOverChartModal();\r\n                 });\r\n            };\r\n            ctrl.fetchDefects = function(){\r\n                var route = '/api/jiraMVP/defectCount';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    var graphData;\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,//[\"35\", \"5\", \"4\", \"1\"],\r\n                            labels: response.labels,//[\"P4 - Minor\", \"P1 - Blocker\", \"P2 - Critical\", \"P3 - Major\"],//response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true,\r\n                                    fontSize: 3\r\n                                },\r\n                                scales: {\r\n                                yAxes: [\r\n                                    {\r\n                                    id: 'y-axis',\r\n                                    type: 'linear',\r\n                                    display: true,\r\n                                    position: 'left',\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                        fontSize: 8\r\n                                    }\r\n                                    }\r\n                                ],\r\n                                xAxes: [\r\n                                    {\r\n                                    id: 'x-axis',\r\n                                    display: true,\r\n                                    ticks: {\r\n                                        fontSize: 8\r\n                                    },\r\n                                    gridLines: {\r\n                                        display: false\r\n                                    }\r\n                                    }\r\n                                ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: '#b2174f'\r\n                            }\r\n                        };\r\n                    }\r\n                    return {\r\n                        name: 'defectCount',\r\n                        title: 'Incidents/Defects',\r\n                        type: 'bar',\r\n                        tooltipText: widgetHoverText.defectCount,\r\n                        data: graphData\r\n                    };\r\n                });\r\n            };\r\n\r\n            ctrl.fetchStoryLeadTimeToRelease = function() {\r\n                var route = '/api/jiraMVP/DorToLive';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                    return {\r\n                        name: 'timeToRelease',\r\n                        title: 'Definition of Ready (DoR) to Live',\r\n                        type: 'text',\r\n                        tooltipText: widgetHoverText.storyLeadTime,\r\n                        data: (response.timeToRelease && response.timeToRelease.value) ? response.timeToRelease : null\r\n                    };\r\n                 });\r\n            };\r\n            \r\n            ctrl.fetchTrendOverStoryLeadTime = function() {\r\n                var route = '/api/trend/dorToDod';\r\n                return customDashboardData.sendWidgetDetails(route, ctrl.paramSprintList || []).then(function(response) {\r\n                    var graphData;\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                            if(response.unit === '%') {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }else {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }\r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        autoSkip: false\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverStoryLeadTime = {\r\n                        name: 'trendOverStoryLeadTime',\r\n                        title: 'Trend over Story Lead Time',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverStoryLeadTime,\r\n                        data: graphData,                       \r\n                        fromSprint: response && response.fromSprint || '',\r\n                        toSprint: response && response.toSprint || ''                     \r\n                    };\r\n\r\n                    ctrl.trendOverStoryLeadTime = trendOverStoryLeadTime;\r\n                    ctrl.trendOverChartModal();\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchTrendOverStoryLiveLeadTime = function() {\r\n                var route = '/api/trend/dodToLive';\r\n                return customDashboardData.sendWidgetDetails(route, ctrl.paramSprintList || []).then(function(response) {\r\n                    var graphData;\r\n                    if(response && response.data && response.data.length) {\r\n                        graphData = {\r\n                            data: response.data,\r\n                            labels: response.labels,\r\n                            options: {\r\n                                maintainAspectRatio: false,\r\n                                tooltips: {\r\n                                    enabled: true\r\n                                },                                \r\n                                scales: {\r\n                                  yAxes: [\r\n                                    {\r\n                                      id: 'y-axis',\r\n                                      type: 'linear',\r\n                                      display: true,\r\n                                      position: 'left',\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        callback: function(label, index, labels) {\r\n                                            if(response.unit === '%') {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }else {\r\n                                                return parseFloat(Math.round(label * 100) / 100) + (response.unit || '')  \r\n                                            }\r\n                                        }\r\n                                      },\r\n                                        scaleLabel: {\r\n                                            display: true,\r\n                                            labelString: 'value in' + (response.unit || '')\r\n                                        },\r\n                                    }\r\n                                  ],\r\n                                  xAxes: [\r\n                                    {\r\n                                      id: 'x-axis',\r\n                                      display: true,\r\n                                      ticks: {\r\n                                        fontSize: 10,\r\n                                        autoSkip: false\r\n                                      },\r\n                                      gridLines: {\r\n                                        display: false\r\n                                      }\r\n                                    }\r\n                                  ]\r\n                                }\r\n                            },\r\n                            datasetOverride: {\r\n                                backgroundColor: 'rgba(0,0,0,0)',\r\n                                borderColor: '#709dca'\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var trendOverStoryLiveLeadTime = {\r\n                        name: 'trendOverStoryLiveLeadTime',\r\n                        title: 'Trend over Story Live Lead Time',\r\n                        type: 'line',\r\n                        tooltipText: widgetHoverText.trendOverStoryLiveLeadTime,\r\n                        data: graphData,                       \r\n                        fromSprint: response && response.fromSprint || '',\r\n                        toSprint: response && response.toSprint || ''                     \r\n                    };\r\n\r\n                    ctrl.trendOverStoryLiveLeadTime = trendOverStoryLiveLeadTime;\r\n                    ctrl.trendOverChartModal();\r\n                 });\r\n            };\r\n\r\n            ctrl.fetchAllSprintList = function() {\r\n                var route = '/api/jiraMVP/sprintsList';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                  ctrl.allSprintList = response || []\r\n                  ctrl.fromSprintList = response || []\r\n                  ctrl.toSprintList = response || []\r\n                });\r\n            };\r\n\r\n            ctrl.fetchAllSprintListWithoutStatus = function() {\r\n                var route = '/api/jiraMVP/sprintsListWithoutStatus';\r\n                return customDashboardData.fetchWidgetDetails(route).then(function(response) {\r\n                  ctrl.allSprintList = response || []\r\n                  ctrl.fromSprintList = response || []\r\n                  ctrl.toSprintList = response || []\r\n                });\r\n            };\r\n           \r\n            $scope.$watch('$root.logoImage', function() {\r\n                ctrl.logoImage = $rootScope.logoImage || localStorage.getItem('logoImage');\r\n            });\r\n        \r\n        pageLoad();\r\n    }\r\n})();","/**\n * Custom widget directive\n */\n(function () {\n    'use strict';\n\n    angular\n        .module(HygieiaConfig.module + '.core')\n        .directive('customWidget', customWidgetDirective);\n\n    customWidgetDirective.$inject = ['$http'];\n\n    function customWidgetDirective($http) {\n        return {\n            templateUrl: 'app/dashboard/views/custom-widget.html',\n            restrict: 'E',\n            scope: {\n                customWidget: '=',\n                fetchData: '&',\n                chartModalDialog: '=',\n                chartModalData: '=',\n                onWidgetClick: '&'\n            },\n            link: link\n        };\n\n        function link(scope, element, attrs) {\n            var overlayDiv = $('#overlay'),\n                textPopup = $('#textPopup');\n\n            if (scope.chartModalDialog) {\n                scope.$watch('chartModalData', function () {\n                    scope.widgetInfo = scope.chartModalData;\n                });\n            } else {\n                scope.fetchData().then(function (widgetInfo) {\n                    scope.widgetInfo = widgetInfo;\n                });\n            }\n            scope.showTooltip = function (event) {\n                var sourceOffset = $(event.target).offset();\n                overlayDiv.show();\n                textPopup.html('<p>' + $(event.target).attr('data-tooltip-text') + '<br /><a target=\"_blank\" href=\"https://confluence.devops.lloydsbanking.com/display/ENGTRAN/KPI+Definitions\">Further details</a></p>');\n                textPopup.offset({\n                    top: sourceOffset.top,\n                    left: sourceOffset.left + 10\n                });\n            };\n\n            scope.hideTooltip = function (e) {\n                var interval = setInterval(function () {\n                    if (!textPopup.is(':hover')) {\n                        clearInterval(interval)\n                        overlayDiv.hide();\n                    }\n                }, 500);\n            };\n\n            scope.widgetInfoClicked = function (widgetType) {\n                var modalElement = $('.modal');\n                modalElement.modal('show')\n                scope.onWidgetClick({\n                    widgetType: widgetType\n                })\n            }\n        }\n    }\n})();","/**\r\n * Communicates with dashboard methods on the api\r\n */\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module(HygieiaConfig.module + '.core')\r\n        .constant('DashboardType', {\r\n            PRODUCT: 'product',\r\n            TEAM: 'team',\r\n            CUSTOM: 'custom'\r\n        })\r\n        .factory('dashboardData', dashboardData);\r\n\r\n    function dashboardData($http, $q) {\r\n        var testSearchRoute = 'test-data/dashboard_search.json';\r\n        var testDetailRoute = 'test-data/dashboard_detail.json';\r\n        var testOwnedRoute='test-data/dashboard_owned.json';\r\n        var testAllUsersRoute= 'test-data/all_users.json';\r\n        var testOwnersRoute = 'test-data/owners.json';\r\n        var  testMatchversion = 'test-data/matchversion.json';\r\n        var testLogoImagePath = 'test-data/logo.json';\r\n        var testAggregateDashboardRoute = 'test-data/aggregate-dashboard.json';\r\n        var testAggregateProjectSettingsRoute = 'test-data/aggregate-project-settings.json';\r\n\r\n        var dashboardRoute = '/api/dashboard';\r\n        var mydashboardRoute = \"/api/dashboard/mydashboard\";\r\n        var myownerRoute = \"/api/dashboard/myowner\";\r\n        var updateBusItemsRoute = '/api/dashboard/updateBusItems'\r\n        var  matchversion = 'api/speedy/getversionmetadata';\r\n        var logoImagePath = 'api/file/logo';\r\n        var aggregateDashboardRoute = 'api/aggregated/gridaccountview';\r\n        var aggregateDashboardProjectViewRoute = 'api/aggregated/gridprojectview';\r\n        var aggregateFilterListRoute = \"api/aggregated/filteredlist\";\r\n        var kpimastermapRoute = \"api/aggregated/kpimastermap\";\r\n        var acrossviewkpiRoute = \"api/aggregated/acrossviewkpi\";\r\n        var aggregateProjectSettingsRoute = 'api/aggregated/orgHierarchy';\r\n        var saveOrgHierarchyRoute = 'api/aggregated/saveOrgHierarchy';\r\n        var kpiDataRoute = 'api/aggregated/getKpiData';\r\n        var saveKpiDataRoute = 'api/aggregated/saveKpiData';\r\n\r\n        return {\r\n            search: search,\r\n            mydashboard: mydashboard,\r\n            myowner: myowner,\r\n            owners: owners,\r\n            updateOwners: updateOwners,\r\n            detail: detail,\r\n            create: create,\r\n            delete: deleteDashboard,\r\n            rename: renameDashboard,\r\n            upsertWidget: upsertWidget,\r\n            types: types,\r\n            getComponent:getComponent,\r\n            updateBusItems:updateBusItems,\r\n            getMatchVersions: getMatchVersions,\r\n            getLogoImage: getLogoImage,\r\n            getAggregateDashboard: getAggregateDashboard,\r\n            getAggregateFilteredlist: getAggregateFilteredlist,\r\n            getKpimastermap: getKpimastermap,\r\n            getAcrossviewkpi: getAcrossviewkpi,\r\n            getAggregateProjectSetting: getAggregateProjectSetting,\r\n            saveOrgHierarchy: saveOrgHierarchy,\r\n            getKpiData: getKpiData,\r\n            saveKpiData: saveKpiData\r\n        };\r\n\r\n        // reusable helper\r\n        function getPromise(route) {\r\n            return $http.get(route).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n        \r\n        // gets list of dashboards\r\n        function search() {\r\n            return getPromise(HygieiaConfig.local ? testSearchRoute : dashboardRoute);\r\n        }\r\n\r\n        //gets list of owned dashboard\r\n        function mydashboard(username){\r\n          return getPromise(HygieiaConfig.local ? testOwnedRoute : mydashboardRoute);\r\n        }\r\n\r\n        //gets dashboard owner from dashboard title\r\n        function myowner(id)\r\n        {\r\n            return getPromise(HygieiaConfig.local ? testOwnedRoute : myownerRoute + \"/\" + id );\r\n        }\r\n\r\n        //gets component from componentId\r\n        function getComponent(componentId){\r\n            return getPromise(HygieiaConfig.local ? testOwnedRoute : myComponentRoute+ '/' + componentId);\r\n        }\r\n\r\n        function owners(id) {\r\n            return getPromise(HygieiaConfig.local ? testOwnersRoute : dashboardRoute + \"/\" + id + \"/owners\");\r\n        }\r\n        \r\n        function updateOwners(id, owners) {\r\n        \treturn $http.put(dashboardRoute + \"/\" + id + \"/owners\", owners).then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        // gets info for a single dashboard including available widgets\r\n        function detail(id) {\r\n            return getPromise(HygieiaConfig.local ? testDetailRoute : dashboardRoute + '/' + id);\r\n        }\r\n\r\n        // creates a new dashboard\r\n        function create(data) {\r\n            return $http.post(dashboardRoute, data)\r\n                .success(function (response) {\r\n                    return response.data;\r\n                })\r\n                .error(function (response) {\r\n                    return null;\r\n                });\r\n        }\r\n\r\n\r\n        // renames a dashboard\r\n\r\n        function renameDashboard(id,newDashboardName, dashboardType, aggrFlag){\r\n             console.log(\"In data renaming dashboard\");\r\n            var postData= {\r\n                 title: newDashboardName\r\n            }\r\n            if(dashboardType === 'Team') {\r\n                postData.aggrFlag = aggrFlag\r\n            }\r\n            return $http.put(dashboardRoute+\"/rename/\"+id, postData)\r\n                .success(\r\n                    function (response) {\r\n                    return response.data;\r\n                })\r\n                .error (function (response) {\r\n                    console.log(\"Error Occured while renaming Dashboard in Data layer:\"+JSON.stringify(response));\r\n                    return response.data;\r\n                });\r\n        }\r\n\r\n        // deletes a dashboard\r\n        function deleteDashboard(id) {\r\n            return $http.delete(dashboardRoute + '/' + id)\r\n                .then(function (response) {\r\n                    return response.data;\r\n            });\r\n        }\r\n\r\n        function types() {\r\n            return [\r\n                {\r\n                    \"id\": \"team\",\r\n                    \"name\": \"Engineering Team\"\r\n                },\r\n                {\r\n                    \"id\": \"product\",\r\n                    \"name\": \"Product\"\r\n                },\r\n                {\r\n                    \"id\": \"custom\",\r\n                    \"name\": \"Team\"\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        // can be used to add a new widget or update an existing one\r\n        function upsertWidget(dashboardId, widget) {\r\n            // create a copy so we don't modify the original\r\n            widget = angular.copy(widget);\r\n\r\n            console.log('New Widget Config', widget);\r\n\r\n            var widgetId = widget.id,\r\n            widgetUrl = widget.baseUrl || 'widget';\r\n\r\n            if (widgetId) {\r\n                // remove the id since that would cause an api failure\r\n                delete widget.id;\r\n            }\r\n\r\n            delete widget.baseUrl;\r\n\r\n            var route = widgetId ?\r\n                $http.put(dashboardRoute + '/' + dashboardId + \"/\" + widgetUrl + \"/\" + widgetId, widget) :\r\n                $http.post(dashboardRoute + '/' + dashboardId + \"/\" + widgetUrl, widget);\r\n\r\n            return route.then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function updateBusItems(id, data) {\r\n            return $http.put(updateBusItemsRoute+\"/\"+id, data)\r\n                .success(function (response) {\r\n                    return response.data;\r\n                })\r\n                .error(function (response) {\r\n                    return null;\r\n                });\r\n        }\r\n\r\n        //gets list of owned dashboard\r\n        function getMatchVersions(){\r\n            return getPromise(HygieiaConfig.local ? testMatchversion : matchversion);\r\n        }\r\n\r\n        //get logo from db\r\n        function getLogoImage(){\r\n            return getPromise(HygieiaConfig.local ? testLogoImagePath : logoImagePath);\r\n        }\r\n\r\n        // gets aggregrated dashboard\r\n        function getAggregateDashboard(postData, viewType) {            \r\n            var route;\r\n            if(viewType == 'account') {\r\n                route = $http.post(aggregateDashboardRoute, postData);\r\n            }else {\r\n                route = $http.post(aggregateDashboardProjectViewRoute, postData);\r\n            }\r\n            return route.then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        //get aggregrated filterlist\r\n        function getAggregateFilteredlist(postData, queryParam) {\r\n            var route = $http.post(aggregateFilterListRoute+'?selection='+ queryParam, postData);\r\n            return route.then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n        \r\n         //get Kpimastermap\r\n         function getKpimastermap(postData, queryParam) {\r\n            return getPromise(HygieiaConfig.local ? kpimastermapRoute : kpimastermapRoute);\r\n        }\r\n\r\n        //get Acrossviewkpi\r\n        function getAcrossviewkpi(postData, firstKpi, graphtype, kpiRequestType, secondKpi) {\r\n            var route = $http.post(acrossviewkpiRoute+'?firstkpi='+ firstKpi+'&graphtype='+graphtype+'&secondkpi='+secondKpi, postData);\r\n            // return route.then(function (response) {\r\n            //     return response.data;\r\n            // });\r\n\r\n                var deferred = $q.defer();                \r\n                route.success(function (response) {\r\n                       // deferred.resolve(response);\r\n                       deferred.resolve({\r\n                           response: response,\r\n                           kpiRequestType: kpiRequestType\r\n                    })\r\n                    })\r\n                    .error(function (response) {\r\n                        deferred.reject(response);\r\n                    });\r\n\r\n                return deferred.promise;\r\n        }\r\n\r\n        function getAggregateProjectSetting(){\r\n            return getPromise(HygieiaConfig.local ? testAggregateProjectSettingsRoute : aggregateProjectSettingsRoute);\r\n        }\r\n \r\n        function saveOrgHierarchy(postData) {\r\n            var route = $http.post(saveOrgHierarchyRoute, postData);\r\n            return route.then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n\r\n        function getKpiData(){\r\n            return getPromise(HygieiaConfig.local ? kpiDataRoute : kpiDataRoute);\r\n        }\r\n        function saveKpiData(postData){\r\n            var route = $http.post(saveKpiDataRoute, postData);\r\n            return route.then(function (response) {\r\n                return response.data;\r\n            });\r\n        }\r\n    }\r\n})();\r\n","/**\n * Fetches data for Team Dashboard\n */\n(function () {\n    'use strict';\n\n    angular\n        .module(HygieiaConfig.module + '.core', [])\n        .factory('customDashboardData', customDashboardData);\n    \n    customDashboardData.$inject = ['$http'];\n    function customDashboardData($http) {\n\n        return {\n            fetchProjectDetails: fetchProjectDetails,\n            fetchWidgetDetails: fetchWidgetDetails,\n            fetchWidgetHoverText: fetchWidgetHoverText,\n            sendWidgetDetails: sendWidgetDetails,\n            fetchHelpers : fetchHelpers\n        };\n\n        function fetchProjectDetails() {\n            return $http.get('/api/excel/projectDetails').then(function (response) {\n                return response.data;\n            });\n        }\n\n        function fetchWidgetDetails(route) {\n            return $http.get(route).then(function (response) {\n                return response.data;\n            });\n        }\n\n        function sendWidgetDetails(route, dataObj) {\n            return $http.post(route, dataObj).then(function (response) {\n                return response.data;\n            });\n        }\n                \n        function fetchHelpers() {\n            return $http.get('../helpers/common-resource.json').then(function (response) {\n                return response.data;\n            });\n        }\n        \n        function fetchWidgetHoverText() {\n            return {\n                'storyDorToDod': 'Time taken from ready to start development to reaching definition of done i.e. completing code with all the testing',\n                'storyDodToLive': 'Time taken from definition of done to Complete to Live',\n                'storyBacklogToDor': 'Time taken from Backlog to definition of ready',\n                'storyLeadTime': 'Time taken from Development & Test Complete to Live',\n                'defectInjectionRate': 'Number of defects identified post done (pre-live) over story count',\n                'noOfCheckins': 'Number of check-ins and builds per day on the master branch',\n                'flowEfficiency': \"flow efficiency measures the percentage of time spent actively working on items that are ‘in the system’ and dividing it by the overall lead time which includes both active working time and wait time for those items\",\n                'cfd': 'Statuses of stories for a particular time interval',\n                'envCreationTime': 'Time it takes to new environment for Dev / QA',\n                'happinessIndex': 'Rating provided by the team against 4 parameters: (Work life balance, Recognition, Learning & Innovation) in the standup',\n                'appDemonstration': 'Demonstration to Product owner',\n                'sprintPredictablity': 'The +/- of velocity delivered based on a previous average.  This is calculated by dividing the velocity in the last sprint by the average velocity in the last 3 sprints',\n                'releaseDeployTime': 'Time required to release the packet on Prod like cluster and  bringing the services back for use',\n                'autoPercentage': 'Percent of automated tests (functional and Non functional) over Total tests',\n                'codeQuality': 'The rating given to the project related to the value of its Technical Debt Ratio',\n                'coveragePercentage': 'JUNIT COVERAGE: Code coverage over number of lines of Java code <br> JSUNIT COVERAGE: Code coverage over number of lines of JS code',\n                'passPercentage': 'PASS %: Percentage of test cases getting passed',\n                'improvement': 'Kaizen Mindset - Retrospectives regularly held and action items recorded and progressed',\n                'citime': 'TIME TO FIX A BROKEN BUILD: Time lag between broken (including compilation or quality gate failure) build to the fixed build <br> CODE BUILD TIME: Time required to build the deployable packet, passing all gates of CI  (incl. code quality, sanity etc.) <br> FUNCTIONAL TEST EXECUTION TIME: Time taken to execute the testing',\n                'commitmentReliability': 'The average story points delivered in the last 3 sprints divided by the average story points committed in the last 3 sprints',\n                'techDebt': 'Aggregated effort of all tech stories in given project having label TECH_DEBT',\n                'agingIssue':'Ageing analysis of the open issues,  median of the difference between issue create date and current date',\n                'issues': 'All the open P1 issues of type issue',\n                'sonarTechDebt': 'Aggregated effort from the Sonar related to tech debt',\n                'assignedValuePercentage':'Percentage of stories that have assigned value over overall stories in Current Sprint ',\n                'backlogHealthPercentage': 'The total number of stories in the Product Backlog status at the end of the last sprint divided by the average number of stories delivered in the last 3 sprints.',\n                'assignmentValueTrend': 'Trend of stories that have assigned value over overall stories across sprints in given project',\n                'risks': 'Top n issues of type risk',\n                'topIssues':'Top n Issues',\n                'defectCount': 'Number of open defects based on priority',\n                'deploymentFrequency': 'Number of deployments in last 3 months',\n                'trendOverAutoVsManual': 'Trend over time for auto vs manual test',\n                'trendOverFunctionalTestExecutionTime': 'Trend over functional test execution',\n                'trendOverFrontEndJUnit':'Trend over front end JUnit',\n                'trendOverBackEndJUnit': 'Trend over back end JUnit',\n                'trendOverCodeQuality': 'Trend Over code quality',\n                'trendOverSprintPredictability': 'Trend over sprint predictability',\n                'trendOverCommitmentReliability': 'Trend over commitment reliability',\n                'trendOverTimeToFixedBrokenBuild': 'Trend Over time to fixed broken build',\n                'trendOverCodeBuildTime': 'Trend over code build time',\n                'trendOverStoryLeadTime': 'Trend over story lead time',\n                'trendOverStoryLiveLeadTime': 'Trend over story live lead time',\n                'defectInjectionRatePostLive': 'Number of defects identified post live'\n            };\n        }\n    }\n})();\n","let sapientModule = {};\n\nimport './codebase/src/app/dashboard/core/data-factories/custom-dashboard-data';\nimport './codebase/src/app/dashboard/core/data-factories/dashboard-data';\nimport './codebase/src/app/dashboard/directives/custom-widget';\nimport './codebase/src/components/templates/custom';\n\nexport default sapientModule;\n\n\n\n","let vendorModule = {};\n\nangular.module('app.sapient', [HygieiaConfig.module, HygieiaConfig.module + '.core'])\n//  Declare modules used in the sapient app\nangular.module(HygieiaConfig.module, []);\nangular.module(HygieiaConfig.module + '.core', [])\n\nexport default vendorModule;\n\n\n\n","'use strict'\n\nclass HealthService {\n\n  constructor($http) {\n    console.log('constructor')\n    'ngInject';\n    this.$http = $http;\n  }\n\n  collectors() {\n    return this.$http.get('/api/speedy/health')\n    .then(response => response.data);\n  }\n}\n\nexport default HealthService;\n","let servicesModule = angular.module('app.services', [])\n\nimport HealthService from './health/health'\nservicesModule.service('HealthService', HealthService);\n\nexport default servicesModule;","module.exports = \"<!-- <div class=\\\"wrapper\\\" ng-controller=\\\"CustomTemplateController as template\\\"> -->\\n  <div class=\\\"wrapper\\\">\\n    <div class=\\\"one\\\">\\n      <div class=\\\"category-head cellDoubleWidth\\\" id=\\\"people\\\">\\n        <div>\\n          <img src=\\\"../dist/assets/img/people-icon.png\\\">\\n          <h5>PEOPLE</h5>\\n          <h6>Are people engaged?</h6>\\n        </div>\\n      </div>\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.improvement.classes\\\" fetch-data=\\\"$ctrl.fetchImprovement()\\\"></custom-widget>\\n\\n      <!-- HAPPINESS INDEX -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.happiness.classes\\\" fetch-data=\\\"$ctrl.fetchHappinessIndex()\\\"></custom-widget>\\n      <div class=\\\"category-head cellDoubleWidth\\\" id=\\\"quality\\\">\\n        <div>\\n          <img src=\\\"../dist/assets/img/value-icon.png\\\">\\n          <h5>VALUE</h5>\\n          <h6>Are we delivering value?</h6>\\n        </div>\\n      </div>\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.value.classes\\\" fetch-data=\\\"$ctrl.fetchAssignValueMetric()\\\"></custom-widget>\\n    </div>\\n\\n    <div class=\\\"two\\\">\\n      <div class=\\\"category-head cellQuadWidth\\\" id=\\\"productivity\\\">\\n        <div>\\n          <img src=\\\"../dist/assets/img/productivity-icon.png\\\">\\n          <h5>SPEED</h5>\\n          <h6>Are we going fast?</h6>\\n        </div>\\n      </div>\\n      <!-- <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.backlogToDOR.classes\\\" fetch-data=\\\"$ctrl.fetchStoryBacklogtoDOR()\\\"></custom-widget> -->\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.storyDORtoDOD.classes\\\" fetch-data=\\\"$ctrl.fetchStoryDORtoDOD()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('storyLeadTime')\\\"></custom-widget>\\n\\n      <!-- <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.storyLeadTime.classes\\\" fetch-data=\\\"$ctrl.fetchStoryLeadTime()\\\"></custom-widget> -->\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.dodToLive.classes\\\" fetch-data=\\\"$ctrl.fetchStoryDODtoLive()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('storyLiveLeadTime')\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.sprintPredictability.classes\\\" fetch-data=\\\"$ctrl.fetchSprintPredictability()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('sprintPredictability')\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.commitmentReliability.classes\\\" fetch-data=\\\"$ctrl.commitmentReliability()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('commitmentReliability')\\\"></custom-widget>\\n\\n      <!-- NUMBER OF CHECK-IN PER DAY   -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.noOfCheckins.classes\\\" fetch-data=\\\"$ctrl.fetchNoOfCheckins()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('NoOfCheckins')\\\"></custom-widget>\\n\\n      <!-- CUMULATIVE FLOW DIAGRAM -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.cfdData.classes\\\" fetch-data=\\\"$ctrl.fetchCfdData()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('CfdData')\\\"></custom-widget>\\n\\n      <!-- BACKLOG HEALTH -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.backlogHealth.classes\\\" fetch-data=\\\"$ctrl.fetchBacklogHealth()\\\"></custom-widget>\\n\\n      <!-- CI TIME -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.ciTime.classes\\\" fetch-data=\\\"$ctrl.fetchCITime()\\\" data-toggle=\\\"modal\\\"\\n        focus-element=\\\"autofocus\\\" on-widget-click=\\\"$ctrl.customWidgetClick(widgetType)\\\"></custom-widget>\\n\\n      <!-- TECH DEBT -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.techDebit.classes\\\" fetch-data=\\\"$ctrl.fetchTechDebt()\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.envCreationTime.classes\\\" fetch-data=\\\"$ctrl.fetchEnvCreationTime()\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.releaseDeployTime.classes\\\" fetch-data=\\\"$ctrl.fetchReleaseDeployTime()\\\"></custom-widget>\\n\\n    </div>\\n    <div class=\\\"three\\\">\\n      <div class=\\\"category-head cellDoubleWidth\\\">\\n        <div>\\n          <img src=\\\"../dist/assets/img/quality-icon.png\\\">\\n          <h5>QUALITY</h5>\\n          <h6>Are we building a quality product?</h6>\\n        </div>\\n      </div>\\n      <!-- <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.xxxxxxxx.classes\\\" fetch-data=\\\"$ctrl.fetchDefectInjectionRatePostlive()\\\"></custom-widget> -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.defectInjectionRate.classes\\\" fetch-data=\\\"$ctrl.fetchDefectInjectionRate()\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.autoVsManualTest.classes\\\" fetch-data=\\\"$ctrl.fetchAutoVsManualTest()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('autoPercentage')\\\"></custom-widget>\\n\\n      <!-- CODE QUALITY -->\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.codeQuality.classes\\\" fetch-data=\\\"$ctrl.fetchCodeQuality()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" data-target=\\\".modal-toggle\\\" ng-click=\\\"$ctrl.customWidgetClick('codeQuality')\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.jUnitCoverage.classes\\\" fetch-data=\\\"$ctrl.fetchJUnitCoverage()\\\"\\n        data-toggle=\\\"modal\\\" focus-element=\\\"autofocus\\\" on-widget-click=\\\"$ctrl.customWidgetClick(widgetType)\\\"></custom-widget>\\n\\n      <custom-widget class=\\\"custom-widget\\\" ng-class=\\\"$ctrl.layout.appDemonstration.classes\\\" fetch-data=\\\"$ctrl.fetchAppDemonstration()\\\"></custom-widget>\\n    </div>\\n  </div>\\n\"","import TeamDashboardTemplate from './team-dashboard.html';\n\nclass TeamDashboardController {\n\n  constructor(HealthService, $q, $scope, $controller) {\n    'ngInject'; // ng-annotate\n\n    this.$controller = $controller;\n    this.$scope = $scope;  \n\n    this.fetchData = function(){\n      return $q(function(resolve, reject) {\n        setTimeout(resolve({\n          title: 'Mocked Widget'\n        }), 1);\n      })   \n    };\n  }\n\n  $onInit() {\n\n    // this.layout = {\n    //   speed: [{\n    //     classes: ['cellDoubleWidth'],\n    //     visible: true\n    //   },{\n    //     visible: true\n    //   }]\n    // }\n\n    var defaultLayout = {\n      improvement: {\n          classes: 'cellDoubleWidth'\n      },\n      happiness: {\n          classes: 'cellDoubleWidth cellDoubleHeight'\n      },\n      value: {\n          classes: 'cellDoubleWidth'\n      },\n      backlogToDOR: {\n          classes: 'cellDoubleWidth'\n      },\n      storyDORtoDOD: {\n          classes: 'cellDoubleWidth'\n      },\n      dodToLive: {\n          classes: 'cellDoubleWidth'\n      },\n      storyLeadTime: {\n          classes: 'cellDoubleWidth'\n      },\n      sprintPredictability: {\n          classes: ''\n      },\n      commitmentReliability: {\n          classes: ''\n      },\n      cfdData: {\n          classes: 'cellDoubleWidth'\n      },\n      backlogHealth: {\n          classes: 'cellDoubleWidth'\n      },\n      noOfCheckins: {\n          classes: 'cellDoubleWidth'\n      },\n      ciTime: {\n          classes: 'cellTripleWidth'\n      },\n      releaseDeployTime: {\n          classes: ''\n      },\n      techDebit: {\n          classes: ''\n      },\n      envCreationTime: {\n          classes: ''\n      },\n      defectInjectionRate: {\n          classes: ''\n      },\n      autoVsManualTest: {\n          classes: ''\n      },\n      codeQuality: {\n          classes: 'cellDoubleWidth'\n      },\n      jUnitCoverage: {\n          classes: 'cellDoubleWidth'\n      },\n      appDemonstration: {\n          classes: 'cellDoubleWidth'\n      }\n\n      \n      \n    }\n    \n    this.layout = defaultLayout;\n\n    angular.extend(this, this.$controller('CustomTemplateController', {$scope: this.$scope}));\n\n    console.log(this)\n\n\n    \n\n  }\n}\n\nlet TeamDashboardComponent = {\n  template: TeamDashboardTemplate,\n  controller: TeamDashboardController\n}\n\nexport default TeamDashboardComponent;\n","module.exports = \"<div class=\\\"statusPage\\\">\\n  <div class=\\\"col-lg-8 col-lg-push-2\\\">\\n    <div class=\\\"widget-modal r\\\">\\n      <div class=\\\"widget-modal-heading\\\">\\n        <h1 class=\\\"page-header\\\">Collectors status</h1>\\n      </div>\\n      <div class=\\\"widget-modal-body\\\">\\n        <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th>Status</th>\\n              <th>Name</th>\\n              <th>Last Execution</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr ng-repeat-start=\\\"collector in $ctrl.collectors\\\">\\n              <td>\\n                <span ng-if=\\\"!collector.errors.length\\\" class=\\\"glyphicon glyphicon-thumbs-up \\\"></span>\\n                <span ng-if=\\\"collector.errors.length\\\" class=\\\"glyphicon glyphicon-thumbs-down\\\"></span>\\n              </td>\\n              <td>{{collector.collectorName}}</td>\\n              <td>{{collector.lastExecuted | date:'EEE, dd MMM @ HH:mm a'}}</td>\\n            </tr>\\n            <tr ng-repeat-end ng-if=\\\"collector.errors.length\\\">\\n              <td colspan=\\\"3\\\">\\n                <div class=\\\"alert alert-danger\\\">\\n                  <p ng-if=\\\"collector.errors.length\\\"><strong>{{collector.errors[0].errorCode}}</strong>: {{collector.errors[0].errorMessage}}</p>\\n                </div>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import StatusTemplate from './status.html';\n\nclass StatusController {\n\n  constructor(HealthService) {\n    this.healthService = HealthService;\n  }\n\n  $onInit() {\n    this.healthService.collectors()\n    .then(data => {\n      this.collectors = data;\n    })\n  }\n}\n\nlet StatusComponent = {\n  template: StatusTemplate,\n  controller: StatusController\n}\n\nStatusController.$inject = ['HealthService']\n\nexport default StatusComponent;\n","module.exports = \"<div class=\\\"form-group\\\">\\n\\t<label>{{$ctrl.name}}\\n    <span ng-if=\\\"$ctrl.description\\\" class=\\\"glyphicon glyphicon-question-sign\\\" uib-tooltip=\\\"{{$ctrl.description}}\\\" tooltip-placement=\\\"top-left\\\"></span>\\n  </label>\\n  <textarea class=\\\"form-control json\\\" ng-model=\\\"$ctrl.value\\\"></textarea>\\n</div>\"","import Template from './input-textarea.component.html';\n\nclass Controller {\n\n  constructor() {}\n\n  $onInit() {}\n\n  $onChanges() {\n    this.placeholder = this.placeholder || this.name;\n  }\n}\n\nlet InputTextareaComponent = {\n  template: Template,\n  bindings: {\n    value: '=',\n    name: '@',\n    description: '@'\n  },\n  controller: Controller\n}\n\nexport default InputTextareaComponent;","module.exports = \"<div class=\\\"form-group\\\">\\n  <label>{{$ctrl.name}}\\n    <span ng-if=\\\"$ctrl.description\\\" class=\\\"glyphicon glyphicon-question-sign\\\" uib-tooltip=\\\"{{$ctrl.description}}\\\" tooltip-placement=\\\"top-left\\\"></span>\\n  </label>\\n  <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"{{$ctrl.placeholder}}\\\" ng-model=\\\"$ctrl.value\\\" ng-required=\\\"required\\\">\\n</div>\\n\"","import Template from './input-number.component.html';\n\nclass Controller {\n\n  constructor() {}\n\n  $onInit() {}\n\n  $onChanges() {\n    this.placeholder = this.placeholder || this.name;\n  }\n}\n\nlet InputTextComponent = {\n  template: Template,\n  bindings: {\n    placeholder: '@',\n    name: '@',\n    description: '@',\n    value: '='\n  },\n  controller: Controller\n}\n\nexport default InputTextComponent;","module.exports = \"<div class=\\\"form-group\\\">\\n  <label>{{$ctrl.name}}\\n    <span ng-if=\\\"$ctrl.description\\\" class=\\\"glyphicon glyphicon-question-sign\\\" uib-tooltip=\\\"{{$ctrl.description}}\\\" tooltip-placement=\\\"top-left\\\"></span>\\n  </label>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{$ctrl.placeholder}}\\\" ng-model=\\\"$ctrl.value\\\">\\n  <small ng-if=\\\"$ctrl.required\\\" class=\\\"form-text text-muted\\\">\\n    This field is required\\n  </small>\\n</div>\\n\"","import Template from './input-text.component.html';\n\nclass Controller {\n\n  constructor() {}\n\n  $onInit() {}\n\n  $onChanges() {\n    this.placeholder = this.placeholder || this.name;\n  }\n}\n\nlet InputTextComponent = {\n  template: Template,\n  bindings: {\n    placeholder: '@',\n    name: '@',\n    description: '@',\n    required: '@',\n    value: '='\n  },\n  controller: Controller\n}\n\nexport default InputTextComponent;","module.exports = \"<h1>LBG Speedy: {{$ctrl.content}}</h1>\"","import BasicTemplate from './basic.component.html';\n\nclass BasicController {\n\n  constructor() {}\n\n  $onInit() {\n    console.log('basic component initialised');\n  }\n\n  $onChanges() {\n    console.log('basic component changed');\n  }\n\n  $onDestroy() {\n    console.log('basic component destroyed');\n  }\n\n}\n\nlet BasicComponent = {\n  template: BasicTemplate,\n  bindings: {\n    content: '@'\n  },\n  controller: BasicController\n}\n\nexport default BasicComponent;","let componentsModule = angular.module('app.components', [])\n\nimport BasicComponent from './dumb/basic/basic.component'\ncomponentsModule.component('spdyBasic', BasicComponent);\n\nimport InputTextComponent from './dumb/form/input-text/input-text.component'\ncomponentsModule.component('spdyInputText', InputTextComponent);\n\nimport InputNumberComponent from './dumb/form/input-number/input-number.component'\ncomponentsModule.component('spdyInputNumber', InputNumberComponent);\n\nimport InputTextareaComponent from './dumb/form/input-textarea/input-textarea.component'\ncomponentsModule.component('spdyInputTextarea', InputTextareaComponent);\n\nimport StatusComponent from './smart/status'\ncomponentsModule.component('spdyStatus', StatusComponent);\n\nimport TeamDashboardComponent from './smart/team-dashboard'\ncomponentsModule.component('spdyTeamDashboard', TeamDashboardComponent);\n\n// import CustomWidgetComponent from './sapient/custom-widget.component'\n// componentsModule.component('customWidget', CustomWidgetComponent);\n\nexport default componentsModule;","import './components';\nimport './services';\nimport './vendor';\nimport './vendor/sapient';\n\nimport customWidgetTemplate from './vendor/sapient/codebase/src/app/dashboard/views/custom-widget.html'\n\nconst MODULE_NAME = 'speedyComponents';\n\nangular.module(MODULE_NAME, ['app.components', 'app.services', 'ui.router', 'app.sapient'])\n.config(function($stateProvider) {\n  $stateProvider.state('statusState', {\n    url: '/status',\n    component: 'spdyStatus'\n  });\n\n  $stateProvider.state('teamDashboardState', {\n    url: '/team-dashboard:id',\n    component: 'spdyTeamDashboard'\n  });\n})\n.config(function($provide) {\n  /**\n   * Hijacking the AngularUI Tabs directive\n   * We need a way to set an active tab based on current router state\n   * By default this is only supported when using tabs via an `ngRepeat` loop.\n   *\n   * @example\n     <tab isactive=\"vm.test(isTrue)\">tab contents</tab>\n  */\n  $provide.decorator('customWidgetDirective', function($delegate) {\n    var directive, link;\n    directive = $delegate[0];\n    link = directive.link;\n\n    delete directive.templateUrl;\n    directive.template = customWidgetTemplate;\n\n    // directive.compile = function() {\n    //   return function Link(scope, element, attrs, ctrls) {\n    //     scope.active = scope.$parent.$eval(attrs.isactive);\n    //     return link.apply(this, arguments);\n    //   };\n    // };\n    return $delegate;\n  });\n})\n// .controller('JozzCustomTemplateController', ['$scope', '$controller', function ($scope, $controller) {\n//   // Initialize the super class and extend it.\n//   angular.extend(this, $controller('CustomTemplateController', {$scope: $scope}));\n  \n//   console.log(this)\n\n// }]);","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"lloyds.less\",\"sourceRoot\":\"\"}]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--6-1!../../node_modules/less-loader/dist/cjs.js??ref--6-2!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js??ref--8-2!./lloyds.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--6-1!../../node_modules/less-loader/dist/cjs.js??ref--6-2!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js??ref--8-2!./lloyds.less\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--6-1!../../node_modules/less-loader/dist/cjs.js??ref--6-2!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js!../../node_modules/less-loader/dist/cjs.js??ref--8-2!./lloyds.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}